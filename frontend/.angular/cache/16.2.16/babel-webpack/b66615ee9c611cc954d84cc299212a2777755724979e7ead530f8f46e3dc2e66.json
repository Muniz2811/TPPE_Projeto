{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProdutoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = '/api/produtos';\n  }\n  // Obter todos os produtos\n  getProdutos() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Erro ao buscar produtos', error);\n      return of({\n        success: false,\n        data: [],\n        message: 'Erro ao buscar produtos. Tente novamente.'\n      });\n    }));\n  }\n  // Obter um produto específico\n  getProduto(id) {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(error => {\n      console.error('Erro ao buscar produto', error);\n      return of({\n        success: false,\n        data: {},\n        message: 'Erro ao buscar produto. Tente novamente.'\n      });\n    }));\n  }\n  // Criar um novo produto\n  createProduto(produto) {\n    return this.http.post(this.apiUrl, produto).pipe(catchError(error => {\n      console.error('Erro ao criar produto', error);\n      return of({\n        success: false,\n        data: {},\n        message: error.error?.message || 'Erro ao criar produto. Tente novamente.'\n      });\n    }));\n  }\n  // Atualizar um produto existente\n  updateProduto(id, produto) {\n    return this.http.put(`${this.apiUrl}/${id}`, produto).pipe(catchError(error => {\n      console.error('Erro ao atualizar produto', error);\n      return of({\n        success: false,\n        data: {},\n        message: error.error?.message || 'Erro ao atualizar produto. Tente novamente.'\n      });\n    }));\n  }\n  // Excluir um produto\n  deleteProduto(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(error => {\n      console.error('Erro ao excluir produto', error);\n      return of({\n        success: false,\n        data: {},\n        message: error.error?.message || 'Erro ao excluir produto. Tente novamente.'\n      });\n    }));\n  }\n  // Obter produtos por categoria\n  getProdutosByCategoria(categoria) {\n    return this.http.get(`${this.apiUrl}?categoria=${categoria}`).pipe(catchError(error => {\n      console.error('Erro ao buscar produtos por categoria', error);\n      return of({\n        success: false,\n        data: [],\n        message: 'Erro ao buscar produtos. Tente novamente.'\n      });\n    }));\n  }\n  // Obter produtos por fabricante\n  getProdutosByFabricante(fabricanteId) {\n    return this.http.get(`${this.apiUrl}?fabricante=${fabricanteId}`).pipe(catchError(error => {\n      console.error('Erro ao buscar produtos por fabricante', error);\n      return of({\n        success: false,\n        data: [],\n        message: 'Erro ao buscar produtos. Tente novamente.'\n      });\n    }));\n  }\n  static {\n    this.ɵfac = function ProdutoService_Factory(t) {\n      return new (t || ProdutoService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProdutoService,\n      factory: ProdutoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ProdutoService };","map":{"version":3,"names":["of","catchError","ProdutoService","constructor","http","apiUrl","getProdutos","get","pipe","error","console","success","data","message","getProduto","id","createProduto","produto","post","updateProduto","put","deleteProduto","delete","getProdutosByCategoria","categoria","getProdutosByFabricante","fabricanteId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/produto.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface Fabricante {\n  _id: string;\n  nome: string;\n  razao_social: string;\n  cnpj: string;\n  telefone?: string;\n  email?: string;\n  endereco?: string;\n  contato: string;\n}\n\nexport interface Produto {\n  _id?: string;\n  nome: string;\n  valor_custo: number;\n  valor_venda: number;\n  categoria: string;\n  fabr: string | Fabricante;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface ProdutoResponse {\n  success: boolean;\n  data: Produto | Produto[];\n  count?: number;\n  message?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n  private apiUrl = '/api/produtos';\n\n  constructor(private http: HttpClient) { }\n\n  // Obter todos os produtos\n  getProdutos(): Observable<ProdutoResponse> {\n    return this.http.get<ProdutoResponse>(this.apiUrl)\n      .pipe(\n        catchError(error => {\n          console.error('Erro ao buscar produtos', error);\n          return of({ success: false, data: [], message: 'Erro ao buscar produtos. Tente novamente.' });\n        })\n      );\n  }\n\n  // Obter um produto específico\n  getProduto(id: string): Observable<ProdutoResponse> {\n    return this.http.get<ProdutoResponse>(`${this.apiUrl}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error('Erro ao buscar produto', error);\n          return of({ success: false, data: {} as Produto, message: 'Erro ao buscar produto. Tente novamente.' });\n        })\n      );\n  }\n\n  // Criar um novo produto\n  createProduto(produto: Produto): Observable<ProdutoResponse> {\n    return this.http.post<ProdutoResponse>(this.apiUrl, produto)\n      .pipe(\n        catchError(error => {\n          console.error('Erro ao criar produto', error);\n          return of({ \n            success: false, \n            data: {} as Produto, \n            message: error.error?.message || 'Erro ao criar produto. Tente novamente.'\n          });\n        })\n      );\n  }\n\n  // Atualizar um produto existente\n  updateProduto(id: string, produto: Produto): Observable<ProdutoResponse> {\n    return this.http.put<ProdutoResponse>(`${this.apiUrl}/${id}`, produto)\n      .pipe(\n        catchError(error => {\n          console.error('Erro ao atualizar produto', error);\n          return of({ \n            success: false, \n            data: {} as Produto, \n            message: error.error?.message || 'Erro ao atualizar produto. Tente novamente.'\n          });\n        })\n      );\n  }\n\n  // Excluir um produto\n  deleteProduto(id: string): Observable<ProdutoResponse> {\n    return this.http.delete<ProdutoResponse>(`${this.apiUrl}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error('Erro ao excluir produto', error);\n          return of({ \n            success: false, \n            data: {} as Produto, \n            message: error.error?.message || 'Erro ao excluir produto. Tente novamente.'\n          });\n        })\n      );\n  }\n\n  // Obter produtos por categoria\n  getProdutosByCategoria(categoria: string): Observable<ProdutoResponse> {\n    return this.http.get<ProdutoResponse>(`${this.apiUrl}?categoria=${categoria}`)\n      .pipe(\n        catchError(error => {\n          console.error('Erro ao buscar produtos por categoria', error);\n          return of({ success: false, data: [], message: 'Erro ao buscar produtos. Tente novamente.' });\n        })\n      );\n  }\n\n  // Obter produtos por fabricante\n  getProdutosByFabricante(fabricanteId: string): Observable<ProdutoResponse> {\n    return this.http.get<ProdutoResponse>(`${this.apiUrl}?fabricante=${fabricanteId}`)\n      .pipe(\n        catchError(error => {\n          console.error('Erro ao buscar produtos por fabricante', error);\n          return of({ success: false, data: [], message: 'Erro ao buscar produtos. Tente novamente.' });\n        })\n      );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}