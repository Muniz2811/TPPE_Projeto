{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AuthGuard } from './auth/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/home',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'home',\n  component: HomeComponent,\n  canActivate: [AuthGuard]\n}];\nclass AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [AuthGuard, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, FormsModule, ReactiveFormsModule, HttpClientModule, RouterModule.forRoot(routes)]\n    });\n  }\n}\nexport { AppModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, LoginComponent],\n    imports: [BrowserModule, FormsModule, ReactiveFormsModule, HttpClientModule, i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","HTTP_INTERCEPTORS","RouterModule","AppComponent","LoginComponent","HomeComponent","AuthInterceptor","AuthGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppModule","bootstrap","provide","useClass","multi","imports","forRoot","declarations","i1"],"sources":["/app/src/app/app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAC1E,SAASC,YAAY,QAAgB,iBAAiB;AAEtD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,SAAS,QAAQ,mBAAmB;;;AAE7C,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE,EACpD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAER;AAAc,CAAE,EAC5C;EAAEK,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAEP,aAAa;EAAEQ,WAAW,EAAE,CAACN,SAAS;AAAC,CAAE,CACrE;AAED,MAsBaO,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRZ,YAAY;IAAA;EAAA;;;iBARb,CACTI,SAAS,EACT;QACES,OAAO,EAAEf,iBAAiB;QAC1BgB,QAAQ,EAAEX,eAAe;QACzBY,KAAK,EAAE;OACR,CACF;MAAAC,OAAA,GAbCtB,aAAa,EACbC,WAAW,EACXC,mBAAmB,EACnBC,gBAAgB,EAChBE,YAAY,CAACkB,OAAO,CAACZ,MAAM,CAAC;IAAA;EAAA;;SAYnBM,SAAS;;2EAATA,SAAS;IAAAO,YAAA,GApBlBlB,YAAY,EACZC,cAAc;IAAAe,OAAA,GAGdtB,aAAa,EACbC,WAAW,EACXC,mBAAmB,EACnBC,gBAAgB,EAAAsB,EAAA,CAAApB,YAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}